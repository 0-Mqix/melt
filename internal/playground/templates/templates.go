// Code generated by melt; DO NOT EDIT.

package templates

import (
	"github.com/0-mqix/melt"
	"io"
	"net/http"
)

// root instances
var (
	Root *melt.Root
)

// component instances
var (
	Index *melt.Component
)

type GlobalHandlers struct {
}

func Load(furnace *melt.Furnace, handlers GlobalHandlers) {
	Root = furnace.MustGetRoot("templates/root.html")

	Index = furnace.MustGetComponent("templates/index.html")

	globalHandlers := make(map[string]melt.GlobalHandler)

	furnace.SetGlobalHandlers(globalHandlers)
}

type IndexXData struct{}

// generated write function for a template in a component
//
//	path: "templates/index.html"
//	template: "x"
func WriteIndexX(w io.Writer, data *IndexXData) error {
	return Index.WriteTemplate(w, "x", data)
}

type IndexData struct{}

// generated write function for component
//
//	path: "templates/index.html"
func WriteIndex(w io.Writer, r *http.Request, data *IndexData, globalOptions ...melt.GlobalOption) error {
	return Index.Write(w, r, data, globalOptions...)
}
