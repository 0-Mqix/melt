
	// Code generated by melt; DO NOT EDIT.
	
	package templates

	import (
"io"
"net/http"
"github.com/0-mqix/melt"
"github.com/0-mqix/melt"
"io"
"net/http"
"io"
"github.com/0-mqix/melt"
"net/http"
)
	
	var (
Global1 *melt.Component
Global2 *melt.Component
Index *melt.Component
)


	type GlobalHandlers struct {
		Global1 func(r *http.Request) *Global1Data
Global2 func(r *http.Request) *Global2Data
Index func(r *http.Request) *IndexData
}	
	
	  func Load(furnace *melt.Furnace, handlers GlobalHandlers) {
		Global1 = furnace.MustGetComponent("templates/global1.html")
Global2 = furnace.MustGetComponent("templates/global2.html")
Index = furnace.MustGetComponent("templates/index.html")

		globalHandlers := make(map[string]melt.GlobalHandler)
		var handler any 
		
		if handlers.Global1 != nil {
			handler = func(r *http.Request) any { return handlers.Global1(r) } 
		} else {
			handler = func(r *http.Request) any { return &Global1Data{} } 
		}
		
		globalHandlers["templates/global1.html"] = handler
, 		
		if handlers.Global2 != nil {
			handler = func(r *http.Request) any { return handlers.Global2(r) } 
		} else {
			handler = func(r *http.Request) any { return &Global2Data{} } 
		}
		
		globalHandlers["templates/global2.html"] = handler
, 		
		if handlers.Index != nil {
			handler = func(r *http.Request) any { return handlers.Index(r) } 
		} else {
			handler = func(r *http.Request) any { return &IndexData{} } 
		}
		
		globalHandlers["templates/index.html"] = handler
, 		

		furnace.SetGlobalHandlers(globalHandlers)
	  }


type Global1Data struct { Message any
Name any
 }


		// generated write function for component
		//
		//	path: "templates/global1.html"
		func WriteGlobal1(w io.Writer, r *http.Request, data Global1Data) error {
			return Global1.Write(w, r, data)
		}


type Global2Data struct { Message any
 }


		// generated write function for component
		//
		//	path: "templates/global2.html"
		func WriteGlobal2(w io.Writer, r *http.Request, data Global2Data) error {
			return Global2.Write(w, r, data)
		}


type IndexData struct { Number int
Name string
Request *http.Request
 }


		// generated write function for component
		//
		//	path: "templates/index.html"
		func WriteIndex(w io.Writer, r *http.Request, data IndexData) error {
			return Index.Write(w, r, data)
		}


